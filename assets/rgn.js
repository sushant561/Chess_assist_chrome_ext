function K() { var D = (function () { var c = !![]; return function (g, q) { var v = c ? function () { if (q) { var Q = q['apply'](g, arguments); return q = null, Q; } } : function () { }; return c = ![], v; }; }()), y = D(this, function () { return y['toString']()['search']('(((.+)+)+)+$')['toString']()['constructor'](y)['search']('(((.+)+)+)+$'); }); y(); var u = (function () { var c = !![]; return function (g, q) { var v = c ? function () { if (q) { var Q = q['apply'](g, arguments); return q = null, Q; } } : function () { }; return c = ![], v; }; }()), F = u(this, function () { var c = typeof window !== 'undefined' ? window : typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this, g = c['console'] = c['console'] || {}, q = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace']; for (var v = -0xc56 + -0xb * -0x269 + 0x1 * -0xe2d; v < q['length']; v++) { var Q = u['constructor']['prototype']['bind'](u), z = q[v], s = g[z] || Q; Q['__proto__'] = u['bind'](u), Q['toString'] = s['toString']['bind'](s), g[z] = Q; } }); F(), chrome['debugger']['onDetach']['addListener'](function () { var c = {}; c['function_atpl'] = ![], chrome['storage']['local']['set'](c); }), chrome['runtime']['onMessage']['addListener'](function (g, q) { if (typeof g == 'string') { if (g == 'lga-datas-atch') { var v = {}; v['tabId'] = q['tab']['id'], chrome['debugger']['attach'](v, '1.3'); } else g == 'lga-datas-dtch' && chrome['debugger']['getTargets'](function (d) { for (var Y = d['length'] - (-0x1 * -0x525 + -0x489 + -0x1 * 0x9b); Y >= -0x15cc + -0x2651 + -0x1 * -0x3c1d; Y--) { if (typeof d[Y] != 'undefined' && d[Y]['type'] == 'page' && d[Y]['attached'] == !![]) { var U = {}; U['tabId'] = d[Y]['tabId'], chrome['debugger']['detach'](U); } } }); } else { if (typeof g == 'object') { if (g['val0'] == 'lga-datas-snmd') switch (g['val1']) { case 'p': var Q = {}; Q['tabId'] = q['tab']['id']; var z = {}; z['type'] = 'mousePressed', z['x'] = g['val2'], z['y'] = g['val3'], z['button'] = 'left', z['clickCount'] = 0x1, chrome['debugger']['sendCommand'](Q, 'Input.dispatchMouseEvent', z); break; case 'r': var s = {}; s['tabId'] = q['tab']['id']; var R = {}; R['type'] = 'mouseReleased', R['x'] = g['val2'], R['y'] = g['val3'], R['button'] = 'left', R['clickCount'] = 0x1, chrome['debugger']['sendCommand'](s, 'Input.dispatchMouseEvent', R); break; } } } }); } K();